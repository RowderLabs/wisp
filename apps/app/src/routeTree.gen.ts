/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkspaceImport } from './routes/workspace'
import { Route as IndexImport } from './routes/index'
import { Route as WorkspaceIndexImport } from './routes/workspace.index'
import { Route as WorkspaceCharactersImport } from './routes/workspace.characters'
import { Route as WorkspaceEntityTreeImport } from './routes/workspace.entity.tree'
import { Route as WorkspaceEntityEntityIdIndexImport } from './routes/workspace.entity.$entityId.index'
import { Route as WorkspaceEntityEntityIdFactsImport } from './routes/workspace.entity.$entityId.facts'

// Create/Update Routes

const WorkspaceRoute = WorkspaceImport.update({
  path: '/workspace',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkspaceIndexRoute = WorkspaceIndexImport.update({
  path: '/',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceCharactersRoute = WorkspaceCharactersImport.update({
  path: '/characters',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceEntityTreeRoute = WorkspaceEntityTreeImport.update({
  path: '/entity/tree',
  getParentRoute: () => WorkspaceRoute,
} as any)

const WorkspaceEntityEntityIdIndexRoute =
  WorkspaceEntityEntityIdIndexImport.update({
    path: '/entity/$entityId/',
    getParentRoute: () => WorkspaceRoute,
  } as any)

const WorkspaceEntityEntityIdFactsRoute =
  WorkspaceEntityEntityIdFactsImport.update({
    path: '/entity/$entityId/facts',
    getParentRoute: () => WorkspaceRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/workspace': {
      preLoaderRoute: typeof WorkspaceImport
      parentRoute: typeof rootRoute
    }
    '/workspace/characters': {
      preLoaderRoute: typeof WorkspaceCharactersImport
      parentRoute: typeof WorkspaceImport
    }
    '/workspace/': {
      preLoaderRoute: typeof WorkspaceIndexImport
      parentRoute: typeof WorkspaceImport
    }
    '/workspace/entity/tree': {
      preLoaderRoute: typeof WorkspaceEntityTreeImport
      parentRoute: typeof WorkspaceImport
    }
    '/workspace/entity/$entityId/facts': {
      preLoaderRoute: typeof WorkspaceEntityEntityIdFactsImport
      parentRoute: typeof WorkspaceImport
    }
    '/workspace/entity/$entityId/': {
      preLoaderRoute: typeof WorkspaceEntityEntityIdIndexImport
      parentRoute: typeof WorkspaceImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  WorkspaceRoute.addChildren([
    WorkspaceCharactersRoute,
    WorkspaceIndexRoute,
    WorkspaceEntityTreeRoute,
    WorkspaceEntityEntityIdFactsRoute,
    WorkspaceEntityEntityIdIndexRoute,
  ]),
])

/* prettier-ignore-end */
