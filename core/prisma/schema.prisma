datasource db {
    provider = "sqlite"
    url      = "file:dev.db"
}

generator client {
    provider = "cargo prisma"
    output   = "../src/prisma.rs"
}

model Character {
    id String @id
    path String @unique
    fullName String
    isCollection Boolean
    traits CharacterHasTrait[]
    characterSheet CharacterSheet?
    canvas Canvas?
}

model Canvas {
    id String @id @default(uuid())
    panels Panel[]
    characterId String @unique
    character Character @relation(fields: [characterId], references: [id])
}

model Panel {
    id String @id @default(uuid())
    panelType String
    x Int
    y Int
    width Int
    height Int
    content String?
    canvasId String
    canvas Canvas @relation(fields: [canvasId], references: [id])
}

model CharacterSheet {
    id Int @id @default(autoincrement())
    photoPath String
    bannerPath String
    canvasPath String 
    characterId String @unique
    character Character @relation(fields: [characterId], references: [path])
    
}


model TraitCategory {

    id Int @id @default(autoincrement())
    name String
    traits Trait[]
    
}

model Trait {

    id Int @id @default(autoincrement())
    name String
    categoryId Int
    category TraitCategory @relation(fields: [categoryId], references: [id])
    characterHasTrait CharacterHasTrait[]
}

model CharacterHasTrait {

    trait Trait @relation(fields: [traitId], references: [id])
    traitId Int
    visible Boolean
    character Character @relation(fields: [characterId], references: [path])
    characterId String

    @@id([characterId, traitId])
}

