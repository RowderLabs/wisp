datasource db {
    provider = "sqlite"
    url      = "file:../../app/dev.db"
}

generator client {
    provider = "cargo prisma"
    output   = "../src/prisma.rs"
}

model BinderItem {
    id Int @id @default(autoincrement())
    isCollection Boolean @default(false)
    path String
    name String
    //paths to children
    itemPaths BinderPath[]
    itemType String?
    character Person? 
}

// 1 true /characters Characters [{2 /characters/1}]

model BinderPath {
    id Int @id @default(autoincrement())
    path String
    itemId Int? @unique
    item BinderItem? @relation(fields: [itemId], references: [id])
}


model Person {
    id Int @id @default(autoincrement())
    name String
    parentRelationId Int?
    familyId Int?
    binderItemId Int? @unique
    family Family? @relation(fields: [familyId], references: [id], onDelete: Cascade)
    parents   Person[]   @relation("parentchildren")
    //all children belonging to person
    children Person[]  @relation("parentchildren")
    //relationship in which person is a product of
    childOf Relationship? @relation("children", fields: [parentRelationId], references: [id])
    //relationships where person is a member
    relationships Relationship[] @relation("members")
    binderItem BinderItem? @relation(fields: [binderItemId], references: [id])
}

model Family {
    id Int @id @default(autoincrement())
    name String
    members Person[]
}

model Relationship {
    id Int @id @default(autoincrement())
    relationshipType String
    //members of a specific relationship
    members Person[] @relation("members")
    //children that are a product of a specific relationship
    children Person[] @relation("children")
}