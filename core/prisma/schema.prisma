datasource db {
    provider = "sqlite"
    url      = "file:dev.db"
}

generator client {
    provider = "cargo prisma"
    output   = "../src/prisma.rs"
}


model Canvas {
    id String @id @default(uuid())
    panels Panel[]
    entityId String @unique
    entity Entity @relation(fields: [entityId], references: [id], onDelete: Cascade)
}

model Panel {
    id String @id @default(uuid())
    panelType String
    x Int
    y Int
    width Int
    height Int
    content String?
    canvasId String
    canvas Canvas @relation(fields: [canvasId], references: [id], onDelete: Cascade)
}

model FactGroup {
    id Int @id @default(autoincrement())
    entity String
    name String
    facts Fact[]
    @@unique([name, entity])
}

model Fact {
    id Int @id @default(autoincrement())
    name String
    type String
    options String?
    groupId Int
    group FactGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
    slices FactSlice[]
    entityFacts FactOnEntity[]
    @@unique([name, groupId])
}



model FactSlice {
    id Int @id @default(autoincrement())
    name String
    facts Fact[]
}

model FactOnEntity {
    value String
    entityId String
    entity Entity @relation(fields: [entityId], references: [id])
    factId Int
    fact Fact @relation(fields: [factId], references: [id])
    @@id([entityId, factId])
}

model Entity {
    id String @id
    name String
    type String
    path String @unique
    isCollection Boolean
    facts FactOnEntity[]
    canvas Canvas?
}
